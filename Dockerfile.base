FROM ubuntu:20.04
LABEL version="Velociraptor $VERSION"
LABEL description="Velociraptor server in a Docker container"
LABEL maintainer="Wes Lambert, @therealwlambert"
ENV VERSION="$VERSION"
RUN apt-get update && \
    apt-get install -y curl wget jq rsync && \
    # Create dirs for Velo binaries
    mkdir -p /opt/velociraptor && \
    for i in linux mac windows; do mkdir -p /opt/velociraptor/$i; done && \
    # Get Release JSON
    RELEASE=$(curl -s $URL)
    # Get Velox binaries
    WINDOWS_EXE=$(cat $RELEASE | jq -r '[.assets | sort_by(.created_at) | reverse | .[] | .browser_download_url | select(test("windows-amd64.exe"))][0]')  && \
    WINDOWS_MSI=$(cat $RELEASE | jq -r '[.assets | sort_by(.created_at) | reverse | .[] | .browser_download_url | select(test("windows-amd64.msi"))][0]') && \
    LINUX_BIN=$(cat $RELEASE | jq -r '[.assets | sort_by(.created_at) | reverse | .[] | .browser_download_url | select(test("linux-amd64$"))][0]') && \
    MAC_BIN=$(cat $RELEASE | jq -r '[.assets | sort_by(.created_at) | reverse | .[] | .browser_download_url | select(test("darwin-amd64"))][0]') && \
    wget -O /opt/velociraptor/linux/velociraptor "$LINUX_BIN" && \
    wget -O /opt/velociraptor/mac/velociraptor_client "$MAC_BIN" && \
    wget -O /opt/velociraptor/windows/velociraptor_client.exe "$WINDOWS_EXE" && \
    wget -O /opt/velociraptor/windows/velociraptor_client.msi "$WINDOWS_MSI" && \
    # Clean up 
    apt-get remove -y --purge curl wget jq && \
    apt-get clean
COPY ./entrypoint .
RUN chmod +x entrypoint
WORKDIR /velociraptor 
CMD ["/entrypoint"]

